initSidebarItems({"enum":[["PyArg","Enum type used to construct PyTuple and PyList types. All the kinds supported in Python are included here."]],"fn":[["pyarg_extract_owned_bool",""],["pyarg_extract_owned_dict",""],["pyarg_extract_owned_double",""],["pyarg_extract_owned_float",""],["pyarg_extract_owned_int",""],["pyarg_extract_owned_list",""],["pyarg_extract_owned_str",""],["pyarg_extract_owned_tuple",""],["pyarg_extract_owned_ulonglong",""],["pyarg_from_bool",""],["pyarg_from_double",""],["pyarg_from_float",""],["pyarg_from_int",""],["pyarg_from_pydict",""],["pyarg_from_pylist",""],["pyarg_from_pytuple",""],["pyarg_from_str",""],["pyarg_from_ulonglong",""]],"mod":[["pybool","Analog to a Python boolean type."],["pydict","An analog of a Python dict which contains pairs of (key, values) each of a single type, will accept an undefined number of one (and just one) of any other supported type (including other PyDict) as value and a corresponding key of a single supported hashable type (check PyDictK to see which ones are supported)."],["pylist","An analog of a Python list which contains elements of a single type, will accept an undefined number of one (and just one) of any other supported type (including other PyLists)."],["pystring","An analog of a Python String."],["pytuple","An analog of a Python tuple, will accept an undefined number of any other supported types."]]});